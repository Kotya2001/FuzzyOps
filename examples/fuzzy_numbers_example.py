"""
Задача:

Необходимо принять решение с помощью теории нечетких множеств в области кредитования.
Предположим в отделение какого-то банка поступили заявки от четырех предприятий о предоставлении кредита.
Перед банком стоит задача выбрать одно предприятие, лучшее по комплексу криетриев качества.
В данной задаче предприятия являются альтернативами (a1, a2, a3, a4).

Для оценки кредитоспособности заемщиков используются некоторые показатели из их бухгалтерской отчетности и на основании
этих данных рассчитываются следующие коэффициенты:

    1.Коэффицент абсолютной ликвидности (F1);
    2.Промежуточный коэффицент покрытия (F2);
    3.Общий коэффицент покрытия (F3);
    4.Коэффициент финансовой независимости (F4);
    5.Коэффициент рентабильности продукции (F5);

Коэффициенты рассчитываются по формулам на основе данных из бухгалтерской отчетности.
Опустим рассчеты коэффициентов и представим матрицу значений коэффициентов:

        a1    a2    a3    a4    Нормативные значения
    F1  0.154 0.102 0.084 0.14  0.1 - 0.25
    F2  1.297 0.71  0.59  0.57  0.5 - 1.0
    F3  2.78  2.27  1.86  1.27  1.0 - 2.5
    F4  0.75  0.72  0.71  0.68  0.6 - 0.8
    F5  0.28  0.115 0.15  0.12  чем выше, тем лучше


Далее необходимо создать доменные области для значений каждого коэффициента (F1, F2, ..., F5),
затем необходимо построить функции принадлежности (нечеткие термы), то есть задать
коэффициенты функций принадлжености (задает эксперт).
Создадим один терм и назовем его "наиболее предпочтительное значение коэффициента" (F1, F2, ...)

После создания нечетких чисел необходимо найти степени уверенности для каждого значения из матрицы
(Например, найти степени уверенности для 0.154 у терма "наиболее предпочтительное значение коэффициента" F1 и.т.д)

После в новой матрице степеней уверенности
находим минимумы по столбцам и у полученного вектора (получается вектор размера 1х4 (4 предприятия))
находим argmax - это и будет полученное решение - какому предприятию наиболее предпочительно выдать кредит

"""

# (Библиотека уже установлена в ваш проект)
from fuzzyops.fuzzy_numbers import Domain
import torch

# матрица финансовых коэффициентов (5x4, 5 - количество коэффициентов (F1, F2, ..., F5), 4 - число предприятий)
coefs = torch.Tensor([[0.154, 0.102, 0.084, 0.140],
                      [1.297, 0.71, 0.59, 0.57],
                      [2.78, 2.27, 1.86, 1.27],
                      [0.75, 0.72, 0.71, 0.68],
                      [0.28, 0.115, 0.15, 0.12]])

# создаем домены для каждого финансового коэффициента
f1 = Domain((0, 0.3, 0.05), name='f1')
f2 = Domain((0, 1.5, 0.05), name='f2')
f3 = Domain((0, 4.5, 0.05), name='f3')
f4 = Domain((0, 1, 0.05), name='f4')
f5 = Domain((0, 2, 0.05), name='f5')

# создаем нечеткие числа, определяющие наиболее предпочитительное значение по мнению эксперта
f1.create_number('trapezoidal', 0.06, 0.19, 0.3, 0.3, name="most")
f2.create_number('trapezoidal', 0, 1, 1.5, 1.5, name="most")
f3.create_number('trapezoidal', 0, 2.5, 4.5, 4.5, name="most")
f4.create_number('trapezoidal', 0, 0.75, 1, 1, name="most")
f5.create_number('trapezoidal', 0, 0.3, 2, 2, name="most")

f_nums = [f1.most, f2.most, f3.most, f4.most, f5.most]
new_coefs = torch.zeros_like(coefs)

# находим степени уверенности для каждого значения из матрицы со значениями коэффицентов для каждого предприятия
for i in range(coefs.size(0)):  # Итерируем по строкам
    new_coefs[i] = torch.tensor([f_nums[i](value).item() for value in coefs[i]])

# находим минимальные значения среди столбцов
min_values = torch.min(new_coefs, dim=0)[0]
# находим у какого предприятия максимальное значение
print(torch.argmax(min_values))